name: CI Pipeline

# Se ejecuta en PRs (flujo ideal) y push a main (red de seguridad)
on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]  # Red de seguridad por si alguien hace push directo

env:
  GO_VERSION: '1.23'

jobs:
  test:
    name: Tests and Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Descargar dependencias
        run: go mod download

      - name: Verificar formato
        run: |
          if ! gofmt -l . | grep -q .; then
            echo "✓ Código formateado correctamente"
          else
            echo "✗ Código no está formateado:"
            gofmt -l .
            exit 1
          fi

      - name: Análisis estático (go vet)
        run: go vet ./...

      - name: Ejecutar tests con race detection
        run: go test -v -race ./...

      - name: Verificar build
        run: go build -v ./...

  lint:
    name: Linter (Optional)
    runs-on: ubuntu-latest
    continue-on-error: true  # No falla el CI si el linter tiene warnings

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Instalar golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Ejecutar linter
        run: golangci-lint run --timeout=5m || echo "Linter warnings found (not critical)"

  compatibility:
    name: Go Version Compatibility
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23', '1.24', '1.25']

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Descargar dependencias
        run: go mod download

      - name: Ejecutar tests
        run: go test -v ./...

      - name: Verificar build
        run: go build -v ./...
