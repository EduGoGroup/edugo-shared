name: Run Tests

on:
  # Trigger manual (on-demand)
  workflow_dispatch:

  # Trigger autom√°tico en PR
  pull_request:
    branches: [ main, develop ]

  # Trigger autom√°tico en push a main
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Tests and Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Descargar dependencias
        run: go mod download

      - name: Ejecutar tests
        run: |
          set +e  # No salir en error
          go test -v -race -coverprofile=coverage.txt ./...
          TEST_EXIT_CODE=$?
          if [ -f coverage.txt ]; then
            echo "‚úÖ Tests completados, archivo de cobertura generado"
            exit 0
          else
            echo "‚ùå Tests fallaron"
            exit $TEST_EXIT_CODE
          fi

      - name: Generar reporte de cobertura
        run: |
          go tool cover -func=coverage.txt
          go tool cover -html=coverage.txt -o coverage.html

      - name: Verificar cobertura
        run: |
          echo "üìä Generando reporte de cobertura..."
          go tool cover -func=coverage.txt
          echo ""
          echo "‚úÖ Tests completados exitosamente"
          echo "üìà Cobertura reportada por paquete arriba"

      - name: Subir reporte de cobertura
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

      - name: Ejecutar linter
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...
